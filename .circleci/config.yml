version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.0

    working_directory: ~/repo

    environment:
      DB_URL: "mongodb://localhost:27017"
      DB_NAME: "mongodb"
      TOKEN: "faketoken"
      CODACY_PROJECT_TOKEN: "456ebbe09ea543de998aa9ce0890d14a"

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run linter
          command: |
            . venv/bin/activate
            python -m flake8 . --exclude=.git,__pycache__,venv
      
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            coverage run --source=code/source -m pytest

      - run:
          name: check tests coverage
          command: |
            . venv/bin/activate
            coverage report -m

      - run:
          name: send coverage report
          command: |
            . venv/bin/activate
            coverage xml
            python-codacy-coverage -r coverage.xml

  deploy:
    docker:
      - image: circleci/python:3.7.0

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Set up AWS Profile
          command: mkdir ~/.aws && echo -e "[profile Moank]\naws_access_key_id=$AWS_ACCESS_KEY_ID\naws_secret_access_key=$AWS_SECRET_ACCESS_KEY\n" > ~/.aws/config

      - run:
          name: Run deployment script
          command: |
            . venv/bin/activate
            chalice deploy

workflows:
  version: 2
  stack:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
